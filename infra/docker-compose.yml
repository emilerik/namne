version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: namne_postgres
    env_file:
      - ../.env
    environment:
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: apppassword
      POSTGRES_DB: appdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d appdb"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    container_name: namne_app
    env_file:
      - ../.env
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://appuser:apppassword@postgres:5432/appdb
      ENV: production
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:8000,http://localhost:3000}
    ports:
      - "8000:8000"
    volumes:
      - ../server/data:/app/data # Optional: persist data files
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 2 &&
        echo 'Initializing database...' &&
        python -m app.db.init_db &&
        python -m app.init_users &&
        echo 'Starting server...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000
      "

volumes:
  postgres_data:
